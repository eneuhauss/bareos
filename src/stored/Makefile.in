#
@MCOMMON@

srcdir = @srcdir@
VPATH = @srcdir@
.PATH: @srcdir@

sd_group=@sd_group@

# one up
basedir = ..
# top dir
topdir = ../..
# this dir relative to top dir
thisdir = src/stored

DEBUG = @DEBUG@
GETTEXT_LIBS = @LIBINTL@
DB_LIBS = @DB_LIBS@
AFS_LIBS = @AFS_LIBS_NONSHARED@
ACL_LIBS = @ACL_LIBS_NONSHARED@
XATTR_LIBS = @XATTR_LIBS_NONSHARED@

first_rule: all
dummy:

# bareos-sd
SDSRCS = acquire.c ansi_label.c append.c askdir.c authenticate.c \
         autochanger.c block.c bsr.c butil.c crc32.c dev.c device.c \
	 dircmd.c ebcdic.c fd_cmds.c job.c label.c lock.c mac.c \
	 mount.c ndmp_tape.c read_record.c read.c record.c reserve.c \
	 scan.c sd_plugins.c spool.c status.c stored_conf.c stored.c \
	 vol_mgr.c vtape.c wait.c
SDOBJS = $(SDSRCS:.c=.o)

# btape
TAPESRCS = acquire.c ansi_label.c autochanger.c block.c btape.c bsr.c \
           butil.c crc32.c dev.c device.c ebcdic.c label.c lock.c \
           mount.c read_record.c record.c reserve.c scan.c sd_plugins.c \
	   spool.c stored_conf.c vol_mgr.c vtape.c wait.c
TAPEOBJS = $(TAPESRCS:.c=.o)

# bls
BLSSRCS = acquire.c ansi_label.c autochanger.c block.c bls.c bsr.c \
	  butil.c crc32.c dev.c device.c ebcdic.c label.c lock.c \
          mount.c read_record.c record.c reserve.c scan.c sd_plugins.c \
	  spool.c stored_conf.c vol_mgr.c vtape.c wait.c
BLSOBJS = $(BLSSRCS:.c=.o)

# bextract
BEXTSRCS = acquire.c ansi_label.c autochanger.c bextract.c block.c \
           bsr.c butil.c crc32.c dev.c device.c ebcdic.c label.c \
	   lock.c mount.c read_record.c record.c reserve.c scan.c \
	   sd_plugins.c spool.c stored_conf.c vol_mgr.c vtape.c wait.c
BEXTOBJS = $(BEXTSRCS:.c=.o)

# bscan
SCNSRCS = acquire.c ansi_label.c autochanger.c block.c bscan.c bsr.c \
	  butil.c crc32.c dev.c device.c ebcdic.c label.c lock.c \
          mount.c read_record.c record.c reserve.c scan.c sd_plugins.c \
	  spool.c stored_conf.c vol_mgr.c vtape.c wait.c
SCNOBJS = $(SCNSRCS:.c=.o)

# bcopy
COPYSRCS = acquire.c ansi_label.c autochanger.c bcopy.c block.c bsr.c \
	   butil.c crc32.c dev.c device.c ebcdic.c label.c lock.c \
           mount.c read_record.c record.c reserve.c scan.c sd_plugins.c \
	   spool.c stored_conf.c vol_mgr.c vtape.c wait.c
COPYOBJS = $(COPYSRCS:.c=.o)

CPPFLAGS += @ZLIB_INC@ @LZO_INC@

SD_LIBS += @CAP_LIBS@
BEXTRACT_LIBS += @ZLIB_LIBS@
BEXTRACT_LIBS += @LZO_LIBS@

INCLUDES += -I$(srcdir) -I$(basedir) -I$(basedir)/include

DEBUG = @DEBUG@
GETTEXT_LIBS = @LIBINTL@
DB_LIBS = @DB_LIBS@
ACL_LIBS = @ACL_LIBS@
XATTR_LIBS = @XATTR_LIBS@
NDMP_LIBS = @NDMP_LIBS@

.SUFFIXES:	.c .o
.PHONY:
.DONTCARE:

# inference rules
.c.o:
	@echo "Compiling $<"
	$(NO_ECHO)$(CXX) $(DEFS) $(DEBUG) -c $(WCFLAGS) $(CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<
#-------------------------------------------------------------------------

all: Makefile bareos-sd @STATIC_SD@ bls bextract bscan btape bcopy
	@echo "===== Make of stored is good ===="
	@echo " "

bareos-sd: Makefile $(SDOBJS) \
	   ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) \
	   ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE) \
	   @NDMP_DEPS@
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(WLDFLAGS) $(LDFLAGS) -L../lib -o $@ $(SDOBJS) \
	   $(NDMP_LIBS) -lbareoscfg -lbareos -lm $(DLIB) $(LIBS) $(WRAPLIBS) \
	   $(SD_LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS)

static-bareos-sd: Makefile $(SDOBJS) \
	          ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) \
	          ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE) \
	          @NDMP_DEPS@
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(WLDFLAGS) $(LDFLAGS) -static -L../lib -o $@ $(SDOBJS) \
	   $(NDMP_LIBS) -lbareoscfg -lbareos -lm $(DLIB) $(LIBS) $(WRAPLIBS) \
	   $(SD_LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS)
	strip $@

ndmp_tape.o: ndmp_tape.c
	@echo "Compiling $<"
	$(NO_ECHO)$(CXX) $(DEFS) $(DEBUG) -c $(WCFLAGS) $(CPPFLAGS) -I../lib $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<

btape: Makefile  $(TAPEOBJS) ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE) ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(TTOOL_LDFLAGS) $(LDFLAGS) -L../lib -o $@ $(TAPEOBJS) \
	   -lbareoscfg -lbareos $(DLIB) -lm $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS)

bls:	Makefile $(BLSOBJS) ../findlib/libbareosfind$(DEFAULT_ARCHIVE_TYPE) ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE)
	@echo "Compiling $<"
	$(LIBTOOL_LINK) $(CXX) $(TTOOL_LDFLAGS) $(LDFLAGS) -L../lib -L../findlib -o $@ $(BLSOBJS) $(DLIB) \
	   -lbareosfind -lbareoscfg -lbareos -lm $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS)

bextract: Makefile $(BEXTOBJS) ../findlib/libbareosfind$(DEFAULT_ARCHIVE_TYPE) ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE)
	@echo "Compiling $<"
	$(LIBTOOL_LINK) $(CXX) $(TTOOL_LDFLAGS) $(LDFLAGS) -L../lib -L../findlib -o $@ $(BEXTOBJS) $(DLIB) \
	   -lbareosfind -lbareoscfg -lbareos -lm $(LIBS) $(SD_LIBS) $(BEXTRACT_LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS) $(AFS_LIBS) $(ACL_LIBS) $(XATTR_LIBS)

bscan:	Makefile $(SCNOBJS) ../findlib/libbareosfind$(DEFAULT_ARCHIVE_TYPE) ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) \
	../cats/libbareossql$(DEFAULT_ARCHIVE_TYPE) ../cats/libbareoscats$(DEFAULT_ARCHIVE_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(TTOOL_LDFLAGS) $(LDFLAGS) -L../lib -L../cats -L../findlib -o $@ $(SCNOBJS) \
	   -lbareossql -lbareoscats $(DB_LIBS) -lbareosfind -lbareoscfg -lbareos -lm $(LIBS) $(SD_LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS)

bcopy:	Makefile $(COPYOBJS) ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE)
	$(LIBTOOL_LINK) $(CXX) $(TTOOL_LDFLAGS) $(LDFLAGS) -L../lib -o $@ $(COPYOBJS) \
	   -lbareoscfg -lbareos -lm $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS)

Makefile: $(srcdir)/Makefile.in $(topdir)/config.status
	cd $(topdir) \
	  && CONFIG_FILES=$(thisdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

install: all
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) bareos-sd $(DESTDIR)$(sbindir)/bareos-sd
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) bls $(DESTDIR)$(sbindir)/bls
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) bextract $(DESTDIR)$(sbindir)/bextract
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) bcopy $(DESTDIR)$(sbindir)/bcopy
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) bscan $(DESTDIR)$(sbindir)/bscan
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) btape $(DESTDIR)$(sbindir)/btape
	@srcconf=bareos-sd.conf; \
	if  test -f ${DESTDIR}${sysconfdir}/$$srcconf; then \
	   destconf=$$srcconf.new; \
	   echo "  ==> Found existing $$srcconf, installing new conf file as $$destconf"; \
	else \
	   destconf=$$srcconf; \
	fi; \
	echo "${INSTALL_CONFIG} $$srcconf ${DESTDIR}${sysconfdir}/$$destconf"; \
	${INSTALL_CONFIG} $$srcconf ${DESTDIR}${sysconfdir}/$$destconf
	@if test "x${sd_group}" != "x"; then \
	   chgrp -f ${sd_group} ${DESTDIR}${sysconfdir}/$$destconf; \
	fi
	@if test -f static-bareos-sd; then \
	   $(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) static-bareos-sd $(DESTDIR)$(sbindir)/static-bareos-sd; \
	fi

libtool-clean:
	@$(RMF) -r .libs _libs

clean:	libtool-clean
	@$(RMF) bareos-sd stored bls bextract bpool btape shmfree core core.* a.out *.o *.bak *~ *.intpro *.extpro 1 2 3
	@$(RMF) bscan bcopy static-bareos-sd

realclean: clean
	@$(RMF) tags bareos-sd.conf

distclean: realclean
	if test $(srcdir) = .; then $(MAKE) realclean; fi
	(cd $(srcdir); $(RMF) Makefile)

devclean: realclean
	if test $(srcdir) = .; then $(MAKE) realclean; fi
	(cd $(srcdir); $(RMF) Makefile)

# Semi-automatic generation of dependencies:
# Use cc -M because X11 `makedepend' doesn't work on all systems
# and it also includes system headers.
# `semi'-automatic since dependencies are generated at distribution time.

depend:
	@$(MV) Makefile Makefile.bak
	@$(SED) "/^# DO NOT DELETE:/,$$ d" Makefile.bak > Makefile
	@$(ECHOCMD) "# DO NOT DELETE: nice dependency list follows" >> Makefile
	@$(CXX) -S -M $(CPPFLAGS) $(XINC) $(INCLUDES) *.c >> Makefile
	@if test -f Makefile ; then \
	    $(RMF) Makefile.bak; \
	else \
	   $(MV) Makefile.bak Makefile; \
	   echo " ======= Something went wrong with make depend. ======="; \
	fi

# -----------------------------------------------------------------------
# DO NOT DELETE: nice dependency list follows
